<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-twitter="http://www.springframework.org/schema/integration/twitter"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-2.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/integration/twitter http://www.springframework.org/schema/integration/twitter/spring-integration-twitter.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<import resource="springbatch-common.xml" />
	<import resource="postnr-import-simple-ctx.xml" />

	<!-- Endpoint: Fetches files from directory -->
	<file:inbound-channel-adapter directory="file://c:/temp"
		channel="files">
		<int:poller>
			<int:interval-trigger interval="1000" />
		</int:poller>
	</file:inbound-channel-adapter>

	<!-- Endpoint: Batch starting endpoint launches a job with filename as input -->
	<int:service-activator
		input-channel="files" ref="batchLauncher" output-channel="batchResult" />
	
	<!-- Channel for batchresult -->	
	<int:channel id="batchResult"/>

	<!-- Endpoint: Reads result and parses it to twitter publishable string -->
	<int:transformer input-channel="batchResult"
		output-channel="twitterChannel"
		expression="payload.id + '- [' + T(java.lang.System).currentTimeMillis() + ']'" />
	
	<!-- Channel: Twitter channel -->
	<int:channel id="twitterChannel" />

	<!-- Endpoint: Twitter publishing endpoint -->
	<int-twitter:outbound-channel-adapter
		twitter-template="twitterTemplate" channel="twitterChannel" />

	<bean id="batchLauncher"
		class="no.magott.spring.integration.batch.FilenameBatchLauncher">
	</bean>

	<bean id="twitterTemplate"
		class="org.springframework.integration.twitter.core.Twitter4jTemplate">
		<constructor-arg value="${twitter.oauth.consumerKey}" />
		<constructor-arg value="${twitter.oauth.consumerSecret}" />
		<constructor-arg value="${twitter.oauth.accessToken}" />
		<constructor-arg value="${twitter.oauth.accessTokenSecret}" />
	</bean>
	
	<context:property-placeholder location="classpath:oauth.properties" />
	<context:annotation-config></context:annotation-config>
	
</beans>
